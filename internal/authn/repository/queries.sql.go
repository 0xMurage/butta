// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package repository

import (
	"context"
)

const getUserWithBasicPasswordAuth = `-- name: GetUserWithBasicPasswordAuth :one
SELECT user_auth_methods.id, user_auth_methods.user_profile_id, user_auth_methods.auth_provider_id, user_auth_methods.login_identifier, user_auth_methods.secret_hash, user_auth_methods.created_at
FROM user_auth_methods
         INNER JOIN user_auth_providers
                    ON user_auth_methods.auth_provider_id = user_auth_providers.id
WHERE user_auth_providers.name = 'basic-password-auth'
  AND user_auth_providers.enabled = true
  AND user_auth_methods.login_identifier = $1
`

func (q *Queries) GetUserWithBasicPasswordAuth(ctx context.Context, loginIdentifier string) (UserAuthMethod, error) {
	row := q.db.QueryRow(ctx, getUserWithBasicPasswordAuth, loginIdentifier)
	var i UserAuthMethod
	err := row.Scan(
		&i.ID,
		&i.UserProfileID,
		&i.AuthProviderID,
		&i.LoginIdentifier,
		&i.SecretHash,
		&i.CreatedAt,
	)
	return i, err
}
